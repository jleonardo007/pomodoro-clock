{"version":3,"sources":["Pomodoro/Duck/types.js","Pomodoro/Duck/actions.js","Pomodoro/PomodoroComponent.jsx","Pomodoro/PomodoroContainer.js","Pomodoro/Duck/reducer.js","index.js"],"names":["secondsLeft","minutesLeft","type","types","paused","target","sessionPeriod","breakPeriod","id","minutes","seconds","sessionEnd","sessionEndingTime","Math","floor","breakEndingTime","beep","ending","end","Session","sessionLength","click","className","onClick","Break","breakLength","Timer","min","sec","PomodoroApp","alarm","document","getElementById","play","handleClick","e","props","isPaused","timer","setPeriod","reset","pause","currentTime","setInterval","getTimerState","clearInterval","turnOnTimer","stopTimer","this","isTimerEnding","preload","src","React","Component","PomodoroContainer","connect","state","dispatch","actions","PomodoroComponent","initialState","pomodoroReducer","action","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.bd507caa.chunk.js","sourcesContent":["const SET_PERIOD = \"SET_PERIOD\";\r\nconst RESET = \"RESET\";\r\nconst START_TIMER = \"START_TIMER\";\r\nconst STOP_TIMER = \"STOP_TIMER\";\r\n\r\nexport default {\r\n  SET_PERIOD,\r\n  RESET,\r\n  START_TIMER,\r\n  STOP_TIMER\r\n};\r\n","import types from \"./types\";\r\n\r\nconst reset = () => {\r\n  return {\r\n    type: types.RESET\r\n  };\r\n};\r\n\r\nconst stopTimer = paused => {\r\n  return {\r\n    type: types.STOP_TIMER,\r\n    paused: !paused\r\n  };\r\n};\r\n\r\nconst setPeriod = (target, sessionPeriod, breakPeriod) => {\r\n  if (target.id === \"session-decrement\" && sessionPeriod > 1) sessionPeriod--;\r\n  if (target.id === \"session-increment\" && sessionPeriod < 60) sessionPeriod++;\r\n  if (target.id === \"break-decrement\" && breakPeriod > 1) breakPeriod--;\r\n  if (target.id === \"break-increment\" && breakPeriod < 60) breakPeriod++;\r\n\r\n  return {\r\n    type: types.SET_PERIOD,\r\n    sessionPeriod,\r\n    breakPeriod\r\n  };\r\n};\r\n\r\n//Variables in turnOnTimer function\r\nlet secondsLeft = 0;\r\nlet minutesLeft = 0;\r\n\r\nconst turnOnTimer = (\r\n  minutes,\r\n  seconds,\r\n  sessionPeriod,\r\n  breakPeriod,\r\n  sessionEnd\r\n) => {\r\n  let sessionEndingTime =\r\n    sessionPeriod < 5 ? 1 : Math.floor(sessionPeriod * 0.2);\r\n  let breakEndingTime = breakPeriod < 5 ? 1 : Math.floor(breakPeriod * 0.2);\r\n\r\n  if (secondsLeft >= 0 && secondsLeft <= 59) {\r\n    minutesLeft = minutes;\r\n    secondsLeft = seconds - 1;\r\n  }\r\n\r\n  if (secondsLeft < 0) {\r\n    minutesLeft = minutes - 1;\r\n    secondsLeft = 59;\r\n  }\r\n\r\n  if (minutesLeft < 0 && !sessionEnd) {\r\n    minutesLeft = breakPeriod;\r\n    secondsLeft = 0;\r\n    sessionEnd = true;\r\n  }\r\n\r\n  if (minutesLeft < 0 && sessionEnd) {\r\n    minutesLeft = sessionPeriod;\r\n    secondsLeft = 0;\r\n    sessionEnd = false;\r\n  }\r\n\r\n  let beep = minutesLeft === 0 && secondsLeft === 0 ? true : false;\r\n\r\n  if (minutesLeft < sessionEndingTime || minutesLeft < breakEndingTime) {\r\n    return {\r\n      type: types.START_TIMER,\r\n      minutesLeft,\r\n      secondsLeft,\r\n      ending: true,\r\n      end: sessionEnd,\r\n      beep\r\n    };\r\n  } else {\r\n    return {\r\n      type: types.START_TIMER,\r\n      minutesLeft,\r\n      secondsLeft,\r\n      ending: false,\r\n      end: sessionEnd,\r\n      beep\r\n    };\r\n  }\r\n};\r\n\r\nexport default {\r\n  reset,\r\n  stopTimer,\r\n  setPeriod,\r\n  turnOnTimer\r\n};\r\n","import React from \"react\";\r\n\r\nconst Session = ({ sessionLength, click }) => {\r\n  return (\r\n    <div className=\"session-section\">\r\n      <h2 id=\"session-label\">Session Period</h2>\r\n      <p id=\"session-length\">{sessionLength}</p>\r\n      <div className=\"session-buttons\">\r\n        <i\r\n          id=\"session-decrement\"\r\n          className=\"fas fa-arrow-alt-circle-down\"\r\n          onClick={click}\r\n        ></i>\r\n        <i\r\n          id=\"session-increment\"\r\n          className=\"fas fa-arrow-alt-circle-up\"\r\n          onClick={click}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Break = ({ breakLength, click }) => {\r\n  return (\r\n    <div className=\"break-section\">\r\n      <h2 id=\"break-label\">Break Period</h2>\r\n      <p id=\"break-length\">{breakLength}</p>\r\n      <div className=\"break-buttons\">\r\n        <i\r\n          id=\"break-decrement\"\r\n          className=\"fas fa-arrow-alt-circle-down\"\r\n          onClick={click}\r\n        ></i>\r\n        <i\r\n          id=\"break-increment\"\r\n          className=\"fas fa-arrow-alt-circle-up\"\r\n          onClick={click}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Timer = ({ min, sec, end, paused, ending, click }) => {\r\n  return (\r\n    <div className=\"timer-section\">\r\n      <h3 id=\"timer-label\">{end ? \"Break Period\" : \"Session Period\"}</h3>\r\n      <p id=\"time-left\" className={ending ? \"timer-ending\" : null}>\r\n        {`${min < 10 ? \"0\" + min : min}:${\r\n          sec < 10 ? \"0\" + sec : sec === 60 ? \"00\" : sec\r\n        }`}\r\n      </p>\r\n      <div className=\"timer-buttons\">\r\n        <i\r\n          id=\"start_stop\"\r\n          className={paused ? \"fas fa-play\" : \"fas fa-pause\"}\r\n          onClick={click}\r\n        ></i>\r\n        <i id=\"reset\" className=\"fas fa-redo-alt\" onClick={click}></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass PomodoroApp extends React.Component {\r\n  \r\n  getTimerState() {\r\n    const {\r\n      minutes,\r\n      seconds,\r\n      isPaused,\r\n      sessionEnd,\r\n      alarm\r\n    } = this.props;\r\n    return { minutes, seconds, isPaused, sessionEnd, alarm };\r\n  }\r\n\r\n  alarm = () => {\r\n    const beep = document.getElementById(\"beep\");\r\n    beep.play();\r\n  };\r\n\r\n  handleClick = e => {\r\n    const target = e.target;\r\n    const {\r\n      sessionLength,\r\n      breakLength,\r\n      isPaused,\r\n    } = this.props;\r\n    let timer = null;\r\n\r\n    if (target.id !== \"start_stop\" && target.id !== \"reset\" && isPaused)\r\n      this.props.setPeriod(target, sessionLength, breakLength);\r\n    else {\r\n      switch (target.id) {\r\n        case \"reset\":\r\n          this.props.reset();\r\n          const beep = document.getElementById(\"beep\");\r\n          beep.pause();\r\n          beep.currentTime = 0;\r\n          break;\r\n\r\n        case \"start_stop\":\r\n          timer = setInterval(() => {\r\n            const {\r\n              minutes,\r\n              seconds,\r\n              isPaused,\r\n              sessionEnd,\r\n              alarm\r\n            } = this.getTimerState();\r\n\r\n            if (alarm) this.alarm();\r\n            if (!isPaused)\r\n              this.props.turnOnTimer(\r\n                minutes,\r\n                seconds,\r\n                sessionLength,\r\n                breakLength,\r\n                sessionEnd\r\n              );\r\n            else clearInterval(timer);\r\n          }, 1000);\r\n          this.props.stopTimer(isPaused);\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      sessionLength,\r\n      breakLength,\r\n      sessionEnd,\r\n      isPaused,\r\n      isTimerEnding\r\n    } = this.props;\r\n    const { minutes, seconds } = this.props;\r\n    return (\r\n      <div id=\"pomodoro-clock\">\r\n        <h1 id=\"title\">\r\n          React Pomodoro Clock <i className=\"fas fa-stopwatch\"></i>\r\n        </h1>\r\n        <Session sessionLength={sessionLength} click={this.handleClick} />\r\n        <Break breakLength={breakLength} click={this.handleClick} />\r\n        <Timer\r\n          min={minutes}\r\n          sec={seconds}\r\n          end={sessionEnd}\r\n          paused={isPaused}\r\n          ending={isTimerEnding}\r\n          click={this.handleClick}\r\n        />\r\n        <audio id=\"beep\" preload=\"auto\" src=\"https://goo.gl/65cBl1\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PomodoroApp;\r\n","import { connect } from \"react-redux\";\nimport actions from \"./Duck/actions\";\nimport PomodoroComponent from \"./PomodoroComponent\";\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  const reset = () => {\n    dispatch(actions.reset());\n  };\n\n  const stopTimer = paused => {\n    dispatch(actions.stopTimer(paused));\n  };\n\n  const setPeriod = (target, sessionPeriod, breakPeriod) => {\n    dispatch(actions.setPeriod(target, sessionPeriod, breakPeriod));\n  };\n\n  const turnOnTimer = (minutes,\n    seconds,\n    sessionPeriod,\n    breakPeriod,\n    sessionEnd) => {\n    dispatch(\n      actions.turnOnTimer(\n        minutes,\n        seconds,\n        sessionPeriod,\n        breakPeriod,\n        sessionEnd\n      )\n    );\n  };\n\n  return {\n    reset,\n    stopTimer,\n    setPeriod,\n    turnOnTimer\n  };\n};\n\nconst PomodoroContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PomodoroComponent);\nexport default PomodoroContainer;\n","import types from \"./types\";\r\n\r\nconst initialState = {\r\n  sessionLength: 25,\r\n  breakLength: 5,\r\n  isPaused: true,\r\n  isTimerEnding: false,\r\n  sessionEnd: false,\r\n  alarm: false,\r\n  minutes: 25,\r\n  seconds: 0\r\n};\r\n\r\nconst pomodoroReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.RESET:\r\n      return { ...initialState };\r\n\r\n    case types.STOP_TIMER:\r\n      return {\r\n        ...state,\r\n        isPaused: action.paused\r\n      };\r\n\r\n    case types.SET_PERIOD:\r\n      return {\r\n        ...state,\r\n        sessionLength: action.sessionPeriod,\r\n        breakLength: action.breakPeriod,\r\n        minutes: action.sessionPeriod\r\n      };\r\n\r\n    case types.START_TIMER:\r\n      return {\r\n        ...state,\r\n        minutes: action.minutesLeft,\r\n        seconds: action.secondsLeft,\r\n        isTimerEnding: action.ending,\r\n        sessionEnd: action.end,\r\n        alarm: action.beep\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pomodoroReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.min.css\";\nimport PomodoroApp from \"./Pomodoro/PomodoroContainer\";\n\nimport pomodoroReducer from \"./Pomodoro/Duck/reducer\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(pomodoroReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PomodoroApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}